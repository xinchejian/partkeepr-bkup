<?php

namespace Proxies\__CG__\PartKeepr\Part;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Part extends \PartKeepr\Part\Part implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setInternalPartNumber($partNumber)
    {
        $this->__load();
        return parent::setInternalPartNumber($partNumber);
    }

    public function getInternalPartNumber()
    {
        $this->__load();
        return parent::getInternalPartNumber();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setPartUnit(\PartKeepr\Part\PartUnit $partUnit)
    {
        $this->__load();
        return parent::setPartUnit($partUnit);
    }

    public function getPartUnit()
    {
        $this->__load();
        return parent::getPartUnit();
    }

    public function setAveragePrice($price)
    {
        $this->__load();
        return parent::setAveragePrice($price);
    }

    public function updateStockLevel()
    {
        $this->__load();
        return parent::updateStockLevel();
    }

    public function setReviewFlag($bReview)
    {
        $this->__load();
        return parent::setReviewFlag($bReview);
    }

    public function getReviewFlag()
    {
        $this->__load();
        return parent::getReviewFlag();
    }

    public function setMinStockLevel($minStockLevel)
    {
        $this->__load();
        return parent::setMinStockLevel($minStockLevel);
    }

    public function setCategory(\PartKeepr\PartCategory\PartCategory $category)
    {
        $this->__load();
        return parent::setCategory($category);
    }

    public function getCategory()
    {
        $this->__load();
        return parent::getCategory();
    }

    public function getProjects()
    {
        $this->__load();
        return parent::getProjects();
    }

    public function setStorageLocation(\PartKeepr\StorageLocation\StorageLocation $storageLocation)
    {
        $this->__load();
        return parent::setStorageLocation($storageLocation);
    }

    public function getStorageLocation()
    {
        $this->__load();
        return parent::getStorageLocation();
    }

    public function setFootprint(\PartKeepr\Footprint\Footprint $footprint = NULL)
    {
        $this->__load();
        return parent::setFootprint($footprint);
    }

    public function setComment($comment)
    {
        $this->__load();
        return parent::setComment($comment);
    }

    public function getComment()
    {
        $this->__load();
        return parent::getComment();
    }

    public function getDistributors()
    {
        $this->__load();
        return parent::getDistributors();
    }

    public function getImages()
    {
        $this->__load();
        return parent::getImages();
    }

    public function getAttachments()
    {
        $this->__load();
        return parent::getAttachments();
    }

    public function getManufacturers()
    {
        $this->__load();
        return parent::getManufacturers();
    }

    public function getParameters()
    {
        $this->__load();
        return parent::getParameters();
    }

    public function getStockLevel()
    {
        $this->__load();
        return parent::getStockLevel();
    }

    public function getCreateDate()
    {
        $this->__load();
        return parent::getCreateDate();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function updateCacheData()
    {
        $this->__load();
        return parent::updateCacheData();
    }

    public function updatePrice()
    {
        $this->__load();
        return parent::updatePrice();
    }

    public function serialize()
    {
        $this->__load();
        return parent::serialize();
    }

    public function deserialize(array $parameters)
    {
        $this->__load();
        return parent::deserialize($parameters);
    }

    public function onPrePersist()
    {
        $this->__load();
        return parent::onPrePersist();
    }

    public function onPreUpdate()
    {
        $this->__load();
        return parent::onPreUpdate();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function deserializeChildren(array $sourceArray, \Doctrine\Common\Collections\Collection $collection, $entityClass)
    {
        $this->__load();
        return parent::deserializeChildren($sourceArray, $collection, $entityClass);
    }

    public function serializeChildren(\Doctrine\Common\Collections\Collection $array)
    {
        $this->__load();
        return parent::serializeChildren($array);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'description', 'comment', 'stockLevel', 'minStockLevel', 'averagePrice', 'status', 'needsReview', 'createDate', 'internalPartNumber', 'category', 'footprint', 'partUnit', 'storageLocation', 'manufacturers', 'distributors', 'images', 'attachments', 'stockLevels', 'parameters', 'projects');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}